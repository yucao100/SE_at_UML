case 100 : $values = array(	100 , 'Continue' , 'This means that the server has received the request headers, and that the client should proceed to send the request body (in the case of a request for which a body needs to be sent; for example, a POST request). If the request body is large, sending it to a server when a request has already been rejected based upon inappropriate headers is inefficient. To have a server check if the request could be accepted based on the request's headers alone, a client must send Expect: 100-continue as a header in its initial request and check if a 100 Continue status code is received in response before continuing (or receive 417 Expectation Failed and not continue).' ) ; break ;
case 101 : $values = array(	101 , 'Switching Protocols' , 'This means the requester has asked the server to switch protocols and the server is acknowledging that it will do so.' ) ; break ;
case 102 : $values = array(	102 , 'Processing' , 'As a WebDAV request may contain many sub-requests involving file operations, it may take a long time to complete the request. This code indicates that the server has received and is processing the request, but no response is available yet.[2] This prevents the client from timing out and assuming the request was lost.' ) ; break ;
            
case 200 : $values = array(	200 , 'OK' , 'Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action.' ) ; break ;
case 201 : $values = array(	201 , 'Created' , 'The request has been fulfilled and resulted in a new resource being created.' ) ; break ;
case 202 : $values = array(	202 , 'Accepted' , 'The request has been accepted for processing, but the processing has not been completed. The request might or might not eventually be acted upon, as it might be disallowed when processing actually takes place.' ) ; break ;
case 203 : $values = array(	203 , 'Non-Authoritative Information' , 'The server successfully processed the request, but is returning information that may be from another source.' ) ; break ;
case 204 : $values = array(	204 , 'No Content' , 'The server successfully processed the request, but is not returning any content. Usually used as a response to a successful delete request.' ) ; break ;
case 205 : $values = array(	205 , 'Reset Content' , 'The server successfully processed the request, but is not returning any content. Unlike a 204 response, this response requires that the requester reset the document view.' ) ; break ;
case 206 : $values = array(	206 , 'Partial Content' , 'The server is delivering only part of the resource due to a range header sent by the client. The range header is used by tools like wget to enable resuming of interrupted downloads, or split a download into multiple simultaneous streams.' ) ; break ;
case 207 : $values = array(	207 , 'Multi-Status' , 'The message body that follows is an XML message and can contain a number of separate response codes, depending on how many sub-requests were made.' ) ; break ;
case 208 : $values = array(	208 , 'Already Reported' , 'The members of a DAV binding have already been enumerated in a previous reply to this request, and are not being included again.' ) ; break ;
case 226 : $values = array(	226 , 'IM Used' , 'The server has fulfilled a GET request for the resource, and the response is a representation of the result of one or more instance-manipulations applied to the current instance.' ) ; break ;
            
case 300 : $values = array(	300 , 'Multiple Choices' , 'Indicates multiple options for the resource that the client may follow. It, for instance, could be used to present different format options for video, list files with different extensions, or word sense disambiguation.' ) ; break ;
case 301 : $values = array(	301 , 'Moved Permanently' , 'This and all future requests should be directed to the given URI.' ) ; break ;
case 303 : $values = array(	303 , 'See Other' , 'The response to the request can be found under another URI using a GET method. When received in response to a POST (or PUT/DELETE), it should be assumed that the server has received the data and the redirect should be issued with a separate GET message.' ) ; break ;
case 304 : $values = array(	304 , 'Not Modified' , 'Indicates that the resource has not been modified since the version specified by the request headers If-Modified-Since or If-Match. This means that there is no need to retransmit the resource, since the client still has a previously-downloaded copy.' ) ; break ;
case 305 : $values = array(	305 , 'Use Proxy' , 'The requested resource is only available through a proxy, whose address is provided in the response. Many HTTP clients (such as Mozilla[8] and Internet Explorer) do not correctly handle responses with this status code, primarily for security reasons.' ) ; break ;
case 306 : $values = array(	306 , 'Switch Proxy' , 'No longer used. Originally meant "Subsequent requests should use the specified proxy."' ) ; break ;
case 307 : $values = array(	307 , 'Temporary Redirect' , 'In this case, the request should be repeated with another URI; however, future requests should still use the original URI. In contrast to how 302 was historically implemented, the request method is not allowed to be changed when reissuing the original request. For instance, a POST request should be repeated using another POST request.' ) ; break ;
case 308 : $values = array(	308 , 'Permanent Redirect' , 'The request, and all future requests should be repeated using another URI. 307 and 308 (as proposed) parallel the behaviours of 302 and 301, but do not allow the HTTP method to change. So, for example, submitting a form to a permanently redirected resource may continue smoothly.' ) ; break ;
            
case 400 : $values = array(	400 , 'Bad Request' , 'The request cannot be fulfilled due to bad syntax.' ) ; break ;
case 401 : $values = array(	401 , 'Unauthorized' , 'Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource. See Basic access authentication and Digest access authentication.' ) ; break ;
case 402 : $values = array(	402 , 'Payment Required' , 'Reserved for future use. The original intention was that this code might be used as part of some form of digital cash or micropayment scheme, but that has not happened, and this code is not usually used. YouTube uses this status if a particular IP address has made excessive requests, and requires the person to enter a CAPTCHA.' ) ; break ;
case 403 : $values = array(	403 , 'Forbidden' , 'The request was a valid request, but the server is refusing to respond to it. Unlike a 401 Unauthorized response, authenticating will make no difference.' ) ; break ;
case 404 : $values = array(	404 , 'Not Found' , 'The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible.' ) ; break ;
case 405 : $values = array(	405 , 'Method Not Allowed' , 'A request was made of a resource using a request method not supported by that resource; for example, using GET on a form which requires data to be presented via POST, or using PUT on a read-only resource.' ) ; break ;
case 406 : $values = array(	406 , 'Not Acceptable' , 'The requested resource is only capable of generating content not acceptable according to the Accept headers sent in the request.' ) ; break ;
case 407 : $values = array(	407 , 'Proxy Authentication Required' , 'The client must first authenticate itself with the proxy.' ) ; break ;
case 408 : $values = array(	408 , 'Request Timeout' , 'The server timed out waiting for the request. According to HTTP specifications: "The client did not produce a request within the time that the server was prepared to wait. The client MAY repeat the request without modifications at any later time."' ) ; break ;
case 409 : $values = array(	409 , 'Conflict' , 'Indicates that the request could not be processed because of conflict in the request, such as an edit conflict in the case of multiple updates.' ) ; break ;
case 410 : $values = array(	410 , 'Gone' , 'Indicates that the resource requested is no longer available and will not be available again. This should be used when a resource has been intentionally removed and the resource should be purged. Upon receiving a 410 status code, the client should not request the resource again in the future. Clients such as search engines should remove the resource from their indices. [citation needed] Most use cases do not require clients and search engines to purge the resource, and a "404 Not Found" may be used instead.' ) ; break ;
case 411 : $values = array(	411 , 'Length Required' , 'The request did not specify the length of its content, which is required by the requested resource.' ) ; break ;
case 412 : $values = array(	412 , 'Precondition Failed' , 'The server does not meet one of the preconditions that the requester put on the request.' ) ; break ;
case 413 : $values = array(	413 , 'Request Entity Too Large' , 'The request is larger than the server is willing or able to process.' ) ; break ;
case 414 : $values = array(	414 , 'Request-URI Too Long' , 'The URI provided was too long for the server to process. Often the result of too much data being encoded as a query-string of a GET request, in which case it should be converted to a POST request.' ) ; break ;
case 415 : $values = array(	415 , 'Unsupported Media Type' , 'The request entity has a media type which the server or resource does not support. For example, the client uploads an image as image/svg+xml, but the server requires that images use a different format.' ) ; break ;
case 416 : $values = array(	416 , 'Requested Range Not Satisfiable' , 'The client has asked for a portion of the file, but the server cannot supply that portion. For example, if the client asked for a part of the file that lies beyond the end of the file.' ) ; break ;
case 417 : $values = array(	417 , 'Expectation Failed' , 'The server cannot meet the requirements of the Expect request-header field.' ) ; break ;
case 418 : $values = array( 418 , 'I'm a teapot' , 'This code was defined in 1998 as one of the traditional IETF April Fools' jokes, in RFC 2324, Hyper Text Coffee Pot Control Protocol, and is not expected to be implemented by actual HTTP servers.' ) ; break ;
case 422 : $values = array(	422 , 'Unprocessable Entity' , 'The request was well-formed but was unable to be followed due to semantic errors.' ) ; break ;
case 423 : $values = array(	423 , 'Locked' , 'The resource that is being accessed is locked.' ) ; break ;
case 424 : $values = array(	424 , 'Failed Dependency' , 'The request failed due to failure of a previous request.' ) ; break ;
case 426 : $values = array(	426 , 'Upgrade Required' , 'The client should switch to a different protocol such as TLS/1.0.' ) ; break ;
case 428 : $values = array(	428 , 'Precondition Required' , 'The origin server requires the request to be conditional. Intended to prevent "the 'lost update' problem, where a client GETs a resource's state, modifies it, and PUTs it back to the server, when meanwhile a third party has modified the state on the server, leading to a conflict."' ) ; break ;"
case 429 : $values = array(	429 , 'Too Many Requests' , 'The user has sent too many requests in a given amount of time. Intended for use with rate limiting schemes.' ) ; break ;
case 431 : $values = array(	431 , 'Request Header Fields Too Large' , 'The server is unwilling to process the request because either an individual header field, or all the header fields collectively, are too large.' ) ; break ;
case 498 : $values = array(	498 , 'Token expired/invalid' , 'Returned by ArcGIS for Server. A code of 498 indicates an expired or otherwise invalid token.' ) ; break ;
            
case 500 : $values = array(	500 , 'Internal Server Error' , 'A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.' ) ; break ;
case 501 : $values = array(	501 , 'Not Implemented' , 'The server either does not recognize the request method, or it lacks the ability to fulfill the request. Usually this implies future availability (e.g., a new feature of a web-service API).' ) ; break ;
case 502 : $values = array(	502 , 'Bad Gateway' , 'The server was acting as a gateway or proxy and received an invalid response from the upstream server.' ) ; break ;
case 503 : $values = array(	503 , 'Service Unavailable' , 'The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.' ) ; break ;
case 504 : $values = array(	504 , 'Gateway Timeout' , 'The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.' ) ; break ;
case 505 : $values = array(	505 , 'HTTP Version Not Supported' , 'The server does not support the HTTP protocol version used in the request.' ) ; break ;
case 506 : $values = array(	506 , 'Variant Also Negotiates' , 'Transparent content negotiation for the request results in a circular reference.' ) ; break ;
case 507 : $values = array(	507 , 'Insufficient Storage' , 'The server is unable to store the representation needed to complete the request.' ) ; break ;
case 508 : $values = array(	508 , 'Loop Detected' , 'The server detected an infinite loop while processing the request.' ) ; break ;
case 510 : $values = array(	510 , 'Not Extended' , 'Further extensions to the request are required for the server to fulfill it.' ) ; break ;
case 511 : $values = array(	511 , 'Network Authentication Required' , 'The client needs to authenticate to gain network access. Intended for use by intercepting proxies used to control access to the network.' ) ; break ; 
